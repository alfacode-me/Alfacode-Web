#!/usr/bin/env node

// Modules
var app = require('./app');
var debug = require('debug')('alfacode-karang-taruna:server');
var http = require('http');
var configApp = require('../config/app');

// Get Port
var port = normalizePort(process.env.PORT || configApp.port);
app.set('port', port);

// Create HTTP Server
var server = http.createServer(app);

// Listen on Provided Port
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

// Normalize a Port
function normalizePort(val) {
  var port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

// Event listener for HTTP server "Error"
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string' ?
    'Pipe ' + port :
    'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// Event Listener for HTTP Server "Listening"
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string' ?
    'pipe ' + addr :
    'port ' + addr.port;
  debug('Listening on ' + bind);
  console.log(`Aplication : ${configApp.name}`);
  console.log(`Versi : ${configApp.versi}`);
  console.log('Port : ' + addr.port)
}